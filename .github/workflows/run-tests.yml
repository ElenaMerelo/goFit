# Le ponemos un nombre significativo para distinguirlo de los demás
# Este nombre será el que aparezca en el badge del README
name: Node.js CI

# Para que se ejecute el workflow en cada push a cualquier rama
# Si alguna vez queremos filtrar por rama podemos emplear la opción branch
on: [push]

# Especificamos los trabajos que queremos que lleve a cabo
jobs:
  # Para publicar nuestro contenedor primero necesitamos logearnos en el ghcr
  login:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publising to GitHub registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          # Con la sintaxis ${{}} accedemos a variables definidas por github,
          # como nuestro usuario y los secretos del repositorio necesarios
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN }}
      - name: Push
        # Construimos y publicamos el repositorio
        run: docker build -t ghcr.io/elenamerelo/gofit . && docker push ghcr.io/elenamerelo/gofit
  build:
    # Establecemos una dependencia entre este trabajo y el anterior, de manera
    # que no se ejecute antes que el login
    needs: login
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Corremos los tests con el contenedor creado anteriormente
      - run: docker run -v `pwd`:/test -t ghcr.io/elenamerelo/gofit
